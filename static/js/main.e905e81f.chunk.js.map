{"version":3,"sources":["config/fbConfig.js","reducers/authReducer.js","reducers/projectReducer.js","reducers/testReducers.js","actions/testHelpers.js","reducers/generalReducers.js","actions/generalHelpers.js","reducers/rootReducer.js","components/Home/index.js","components/auth/SignIn/index.js","actions/authActions.js","components/auth/SignUp/index.js","components/Test/index.js","components/Summary/index.js","actions/projectActions.js","components/Sample/index.js","components/Train/index.js","components/Sample/Shulte/Information/index.js","components/Sample/Timer/index.js","components/Button/index.js","components/Sample/Shulte/index.js","components/Sample/ShulteRed/index.js","components/Sample/Perception/index.js","components/Sample/Count/Numbers/index.js","components/Sample/TimerReverse/index.js","components/Sample/Count/Rows/index.js","components/Sample/Count/index.js","components/Sample/MemoryWords/index.js","components/Navbar/SignedInLinks.js","components/Navbar/SignedOutLinks.js","components/Navbar/index.js","components/CurrentSummary/index.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","initState","authError","authReducer","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","err","message","projectReducer","combineReducers","setTime","payload","currentTime","perceptionResult","time","result","errors","shulteResult","shulteRedResult","countResult","memoryWordsResult","memoryImagesResult","rootReducer","auth","project","firestoreReducer","firebaseReducer","current","testReducers","generalReducers","Home","props","react_default","a","createElement","className","Link","to","SignIn","email","password","handleChange","e","_this","setState","defineProperty","target","id","value","handleSubmit","preventDefault","signIn","_this$props","this","uid","Redirect","onSubmit","htmlFor","onChange","Component","connect","dispatch","creds","credentials","getState","_ref","getFirebase","signInWithEmailAndPassword","then","catch","Signup","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","initials","compose","projects","ordered","firestoreConnect","filter","authorId","map","key","authorFirstName","authorLastName","createdAt","toDate","toString","createProject","profile","add","Date","CreateProject","title","content","history","push","Sample","Information","prevProps","end","error","errorMessage","instructionNote","Timer","timer","counter","tick","setInterval","clearInterval","actions","Button","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","nameOfClass","inherits","createClass","text","onClick","Shulte","errorCounter","startTraining","endTraining","tableLength","numbers","fill","i","sort","Math","random","userNumbers","cellVerify","cell","slice","setNext","submitResult","_this2","Fragment","Shulte_Information","Sample_Timer","Button_Button","submitShulte","ShulteRed","countBackwards","redLength","blackLength","red","black","userRed","userBlack","parseInt","submitShulteRed","Perception","letter","searchedLetter","gridLength","letters","newLetters","longLetters","guessedCells","index","includes","innerText","getTime","submitPerseption","Numbers","firstNumber","floor","secondNumber","sign","round","checkResult","first","second","setAnswer","elIndex","res","disabled","onBlur","style","width","TimerReverse","maxTime","passedFunction","Rows","row","rowAnswer","ans","submitRow","startNextRow","submitLastRow","_this$props2","currentRow","rowLength","lineLength","number","j","Numbers_Numbers","Sample_TimerReverse","numberOfRows","Count","answer","item","Rows_Rows","submitCount","words","MemoryWords","showWords","correct","endMemorizing","checkWords","wordsLower","word","toLowerCase","values","join","placeholder","autoComplete","submitMemoryWords","signOut","_ref2","NavLink","SignedOutLinks","links","Navbar_SignedInLinks","Navbar_SignedOutLinks","CurrentSummary","showSummary","showResults","App","components_Navbar","Switch","Route","exact","path","component","Signin","Test","Train","Summary","Boolean","window","location","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e905e81f.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyCZnBjFCvxM90C-WIcjuVwzUPAgr2782QA\",\r\n    authDomain: \"psy-testing.firebaseapp.com\",\r\n    databaseURL: \"https://psy-testing.firebaseio.com\",\r\n    projectId: \"psy-testing\",\r\n    storageBucket: \"psy-testing.appspot.com\",\r\n    messagingSenderId: \"209166839391\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nfirebase.firestore();\r\n\r\nexport default firebase ","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","export const initState = {}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  console.log(\"State in project reducer\", action, state)\r\n\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT_SUCCESS':\r\n      console.log('create project success');\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error');\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;","import { combineReducers } from \"redux\";\r\nimport { SET_TIME } from '../actions/testHelpers';\r\n\r\nexport const setTime = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case SET_TIME:\r\n            return action.payload.currentTime;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default combineReducers({\r\n    setTime\r\n})\r\n","export const SET_TIME = \"current/SET_TIME\";\r\n\r\nexport const setTime = (currentTime = \"\") => ({\r\n    type: SET_TIME,\r\n    payload: { currentTime }\r\n});","import {combineReducers} from \"redux\";\r\nimport {\r\n  SUBMIT_COUNT, SUBMIT_MEMORY_IMAGES,\r\n  SUBMIT_MEMORY_WORDS,\r\n  SUBMIT_PERCEPTION,\r\n  SUBMIT_SHULTE,\r\n  SUBMIT_SHULTE_RED\r\n} from '../actions/generalHelpers';\r\n\r\nexport const perceptionResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_PERCEPTION:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const shulteResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_SHULTE:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const shulteRedResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_SHULTE_RED:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const countResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_COUNT:\r\n      return {\r\n        ...state,\r\n        result: action.payload.result,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const memoryWordsResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_MEMORY_WORDS:\r\n      return {\r\n        ...state,\r\n        result: action.payload.result,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const memoryImagesResult = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_MEMORY_IMAGES:\r\n      return {\r\n        ...state,\r\n        time: action.payload.result.time,\r\n        errors: action.payload.result.errors\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  perceptionResult,\r\n  shulteResult,\r\n  shulteRedResult,\r\n  countResult,\r\n  memoryWordsResult,\r\n  memoryImagesResult,\r\n})\r\n","export const SUBMIT_PERCEPTION = \"general/SUBMIT_PERCEPTION\";\r\nexport const SUBMIT_SHULTE = \"general/SUBMIT_SHULTE\";\r\nexport const SUBMIT_SHULTE_RED = \"general/SUBMIT_SHULTE_RED\";\r\nexport const SUBMIT_COUNT = \"general/SUBMIT_COUNT\";\r\nexport const SUBMIT_MEMORY_WORDS = \"general/SUBMIT_MEMORY_WORDS\";\r\nexport const SUBMIT_MEMORY_IMAGES = \"general/SUBMIT_MEMORY_IMAGES\";\r\n\r\nexport const submitPerseption = (result = {}) => ({\r\n  type: SUBMIT_PERCEPTION,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitShulte = (result = {}) => ({\r\n  type: SUBMIT_SHULTE,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitShulteRed = (result = {}) => ({\r\n  type: SUBMIT_SHULTE_RED,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitCount = (result = {}) => ({\r\n  type: SUBMIT_COUNT,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitMemoryWords = (result = {}) => ({\r\n  type: SUBMIT_MEMORY_WORDS,\r\n  payload: {result}\r\n});\r\n\r\nexport const submitMemoryImages = (result = {}) => ({\r\n  type: SUBMIT_MEMORY_IMAGES,\r\n  payload: {result}\r\n});","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport testReducers from './testReducers';\r\nimport generalReducers from './generalReducers';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n    current: testReducers,\r\n    result: generalReducers\r\n});\r\n\r\nexport default rootReducer","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './styles.css'\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <div className=\"container home-container\">\r\n            {/*<div className=\"home-item\"><Link to=\"/test\" >Начать тренировку</Link></div>*/}\r\n            {/*<div className=\"home-item\"><Link to=\"/train\" >Train</Link></div>*/}\r\n          <Link to='/test/shulte'>Начать</Link>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Home","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signIn } from '../../../actions/authActions'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Войти</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Почта </label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Пароль </label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">\r\n              Вход\r\n            </button>\r\n            <div className=\"center red-text\">\r\n              {authError && <p>{authError}</p>}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../../actions/authActions'\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Регистрация </h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Почта </label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Пароль </label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">Имя </label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Фамилия </label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Зарегистрироваться</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n  return {\r\n    signUp: (creds) => dispatch(signUp(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n//import { firestoreConnect } from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport './styles.css'\r\n\r\nconst Test = (props) => {\r\n  const {auth} = props;\r\n  if (!auth.uid) return <Redirect to='/signin'/>;\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <Link to='/test/sample'>Sample</Link>  */}\r\n      <div className=\"test-home\">\r\n        <Link to='/test/shulte'>Начать тест Шульте</Link>\r\n        <br/>\r\n        <Link to='/test/shulte-red'>Начать тест Шульте в модификации Горбова</Link>\r\n        <br/>\r\n        <Link to='/test/perception'>Начать методику корректурные пробы</Link>\r\n        <br/>\r\n        <Link to='/test/count'>Начать методику счет по Крепелину</Link>\r\n        <br/>\r\n        <Link to='/test/memory-words'>Начать методику \"Запоминание слов\"</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(Test)","import React from 'react'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Summary = ({ projects, auth }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary container\">\r\n      {projects && projects.length && projects.filter(project => project.authorId === auth.uid).map(project =>\r\n        <div className=\"card-content grey-text text-darken-3\" key={project.id}>\r\n          <p>Имя: {project.authorFirstName} {project.authorLastName}</p>\r\n          <p className=\"grey-text\">{project.createdAt && project.createdAt.toDate().toString()}</p>\r\n          {project.shulteResult &&\r\n            <div>\r\n              <h4>Результат методики \"Таблицы шульте\"</h4>\r\n              <div>Время: {project.shulteResult && project.shulteResult.time}</div>\r\n              <div>Ошибки: {project.shulteResult && project.shulteResult.errors}</div>\r\n            </div>\r\n          }\r\n      <hr />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(Summary)","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n    }).catch(err => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={this.handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n//import { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Sample from '../Sample';\r\n\r\nconst Train = (props) => {\r\n  const { auth } = props;\r\n  if (!auth.uid) return <Redirect to='/signin' />\r\n  return (\r\n    <div>\r\n      Train\r\n      <Sample history={props.history} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps)\r\n)(Train)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Information extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    return prevProps.time !== this.props.time || prevProps.errors !== this.props.errors;\r\n  }\r\n  render() {\r\n    const {end, errors, error, errorMessage, instructionNote, time} = this.props;\r\n    return (\r\n      <div className='info'>\r\n        {\r\n          end ? <p>Тестирование завершено! Ваше время: {time} сек. Количество ошибок: {errors}.</p> :\r\n            error ? <p className='info__error'>{errorMessage}</p> :\r\n              <p>{instructionNote}</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    time: state.current.setTime\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Information)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {setTime} from '../../../actions/testHelpers';\r\n\r\nclass Timer extends Component {\r\n  state = {\r\n    timer: null,\r\n    counter: 0\r\n  };\r\n\r\n  tick = () => {\r\n    this.setState({\r\n      counter: this.state.counter + 1\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let timer = setInterval(this.tick, 1000);\r\n    this.setState({ timer });\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.setTime(this.state.counter);\r\n    clearInterval(this.state.timer);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='timer'>\r\n        {this.state.counter} сек.\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  setTime\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(Timer);","import React, {Component} from 'react';\r\nimport './styles.css'\r\n\r\nexport class Button extends Component {\r\n  nameOfClass = () => {\r\n    switch (this.props.nameOfClass) {\r\n      case 'next':\r\n        return 'button-next';\r\n      default:\r\n        return 'button-main';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {text, onClick} = this.props;\r\n    return (\r\n      <button className={this.nameOfClass()} onClick={onClick}>{text}</button>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitShulte} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Information from './Information'\r\nimport Timer from '../Timer'\r\nimport {Button} from \"../../Button\";\r\nimport './styles.css';\r\n\r\nclass Shulte extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n  };\r\n\r\n  tableLength = 25; //25\r\n  numbers = Array(this.tableLength).fill().map((e, i) => i + 1).sort(() => Math.random() - 0.5);\r\n  userNumbers = [0];\r\n  cellVerify = (cell) => {\r\n    this.setState({error: false});\r\n    if (this.userNumbers.slice(-1)[0] + 1 === cell) {\r\n      this.userNumbers.push(cell);\r\n      if (this.userNumbers.slice(-1)[0] === this.tableLength) {\r\n        this.setState({endTraining: true})\r\n      }\r\n    } else {\r\n      this.setState({error: true});\r\n      if (this.userNumbers.length <= this.tableLength && cell !== 25) {\r\n        let error = this.state.errorCounter + 1;\r\n        this.setState({errorCounter: error})\r\n      }\r\n    }\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.history.push('/test/shulte-red');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Начните поиск цифр от 1 до 25'}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Найдите числа!'}\r\n          />\r\n\r\n          <div className='table'>\r\n            {\r\n              this.numbers.map((e) =>\r\n                <div key={e} onClick={() => this.cellVerify(e)} className='cell'>{e}</div>)\r\n            }\r\n          </div>\r\n          {!this.state.endTraining && <Timer/>}\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n         // <button className='next' onClick={() =>\r\n        //  this.props.submitResult({time: this.props.time, errors: this.state.errorCounter})}>Submit\r\n        //  </button>\r\n         // <button className='next' onClick={() =>\r\n        //  this.props.createProject(this.props.project)\r\n      // }>Submit Final\r\n      //    </button>\r\n\r\n        <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitShulte(result))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shulte)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitShulteRed} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Information from '../Shulte/Information'\r\nimport Timer from '../Timer'\r\nimport './styles.css';\r\nimport {Button} from \"../../Button\";\r\n\r\nclass ShulteRed extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    countBackwards: false,\r\n  };\r\n\r\n  redLength = 24; //24\r\n  blackLength = 25; //25\r\n  red = Array(this.redLength).fill().map((e, i) => i + 1 + 'r');\r\n  black = Array(this.blackLength).fill().map((e, i) => i + 1 + 'b');\r\n  numbers = this.red.concat(this.black).sort(() => Math.random() - 0.5);\r\n  userRed = [`${this.redLength + 1}r`];\r\n  userBlack = ['0b'];\r\n  cellVerify = (cell) => {\r\n    console.log(cell, this.userRed, this.userBlack);\r\n    this.setState({error: false});\r\n    if (this.state.countBackwards) {\r\n      if (parseInt(this.userRed.slice(-1)[0]) - 1 + \"r\" === cell) {\r\n        this.userRed.push(cell);\r\n        this.setState({countBackwards: false});\r\n      } else {\r\n        this.setState({error: true});\r\n        if (this.userRed.length <= this.redLength && cell !== 24) {\r\n          let error = this.state.errorCounter + 1;\r\n          this.setState({errorCounter: error})\r\n        }\r\n      }\r\n    } else if (!this.state.countBackwards) {\r\n      if (parseInt(this.userBlack.slice(-1)[0]) + 1 + \"b\" === cell) {\r\n        this.userBlack.push(cell);\r\n        this.setState({countBackwards: true});\r\n        if (parseInt(this.userBlack.slice(-1)[0]) === this.blackLength) {\r\n          this.setState({endTraining: true})\r\n        }\r\n      } else {\r\n        this.setState({error: true});\r\n        if (this.userBlack.length <= this.blackLength && cell !== 25) {\r\n          let error = this.state.errorCounter + 1;\r\n          this.setState({errorCounter: error})\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.history.push('/test/perception');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Начните поиск цифр'}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Найдите числа!'}\r\n          />\r\n\r\n          <div className='table-wide'>\r\n            {\r\n              this.numbers.map((e) =>\r\n                <div className={e.slice(-1) === 'r' ? 'red cell-wide' : 'cell-wide'}\r\n                     key={e} onClick={() => this.cellVerify(e)}>{parseInt(e)}</div>)\r\n            }\r\n          </div>\r\n          {!this.state.endTraining && <Timer/>}\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n        <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitShulteRed(result))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShulteRed)","import React, {Component} from 'react';\r\nimport Timer from '../Timer';\r\nimport Information from '../Shulte/Information';\r\nimport {createProject} from \"../../../actions/projectActions\";\r\nimport {submitPerseption} from \"../../../actions/generalHelpers\";\r\nimport {connect} from \"react-redux\";\r\nimport './styles.css';\r\nimport {Button} from \"../../Button\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Perception extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false\r\n  };\r\n  letter = 'н';\r\n  searchedLetter = 'п';\r\n  gridLength = 252;  //252\r\n  letters = Array(this.gridLength).fill(this.letter);\r\n  newLetters = Array(4).fill(this.searchedLetter);\r\n  longLetters = this.letters.concat(this.newLetters).sort(() => Math.random() - 0.5);\r\n\r\n  guessedCells = [];\r\n  cellVerify = (cell, index) => {\r\n    this.setState({error: false});\r\n    if (cell === this.searchedLetter && !this.guessedCells.includes(index) && this.guessedCells.length <= this.newLetters.length) {\r\n      this.guessedCells.push(index);\r\n      if (this.newLetters.length === this.guessedCells.length) {\r\n        this.setState({endTraining: true});\r\n      }\r\n    } else {\r\n      this.setState({error: true, errorCounter: this.state.errorCounter + 1});\r\n    }\r\n\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult({time: this.props.time, errors: this.state.errorCounter});\r\n    this.props.history.push('/test/count');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <>\r\n        <div className='contents'>\r\n          <p>Корректурная проба</p>\r\n          {!this.state.startTraining &&\r\n          <div className='message'>\r\n            <span className='start-message'>{`Найдите все буквы \"${this.searchedLetter}\"`}</span>\r\n            <button className='start-btn' onClick={() => this.setState({startTraining: true})}>Начать</button>\r\n          </div>\r\n          }\r\n          {this.state.startTraining &&\r\n          <React.Fragment>\r\n            <Information error={this.state.error} end={this.state.endTraining}\r\n                         errors={this.state.errorCounter}\r\n                         errorMessage={'Неверная буква!'}\r\n                         instructionNote={`Найдите все буквы \"${this.searchedLetter}\"`}\r\n            />\r\n            <div className='grid'>\r\n              {\r\n                this.longLetters.map((e, i) =>\r\n                  <div\r\n                    key={i}\r\n                    onClick={(e) => this.cellVerify(e.target.innerText, i)}\r\n                    className='letter'>{e}\r\n                  </div>)\r\n              }\r\n            </div>\r\n            {!this.state.endTraining && <Timer getTime={this.props.time}/>}\r\n          </React.Fragment>\r\n          }\r\n        </div>\r\n        {this.state.endTraining && <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitPerseption(result))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Perception)","import React, {Component} from \"react\";\r\n\r\nexport class Numbers extends Component {\r\n  state = {\r\n    value: null,\r\n  };\r\n  firstNumber = Math.floor(Math.random() * (10 - 1)) + 1;\r\n  secondNumber = Math.floor(Math.random() * (10 - 1)) + 1;\r\n  sign = Math.round(Math.random());\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n  };\r\n\r\n  checkResult = () => {\r\n    const first = parseInt(this.firstNumber);\r\n    const second = parseInt(this.secondNumber);\r\n    const result = this.sign  ? first + second : first - second;\r\n    //return parseInt(this.state.value) === result ? console.log(\"yes\") : console.log(\"No\")\r\n    this.props.setAnswer({\r\n      index: this.props.elIndex,\r\n      res: parseInt(this.state.value) === result ? 1 : 0})\r\n  };\r\n\r\n  render() {\r\n    const {firstNumber, secondNumber, sign} = this;\r\n    const {disabled} = this.props;\r\n\r\n    return (\r\n      <div className='cell-container'>\r\n        <div>{firstNumber}</div>\r\n        <div> {sign ? \"+\" : \"-\"} </div>\r\n        <div>{secondNumber}</div>\r\n        <input onChange={this.handleChange} disabled={disabled} onBlur={this.checkResult}\r\n        style={{width: '36px'}}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n//import {setTime} from '../../../actions/testHelpers';\r\n\r\nclass TimerReverse extends Component {\r\n  state = {\r\n    timer: null,\r\n    counter: this.props.maxTime\r\n  };\r\n\r\n  tick = () => {\r\n    if (this.state.counter > 1) {\r\n      this.setState({\r\n        counter: this.state.counter - 1\r\n      })\r\n    } else  {\r\n      this.setState({\r\n        counter: this.state.counter - 1\r\n      });\r\n      this.props.passedFunction();\r\n      clearInterval(this.state.timer);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let timer = setInterval(this.tick, 1000);\r\n    this.setState({ timer });\r\n  }\r\n  componentWillUnmount() {\r\n    //this.props.setTime(this.state.counter); - не нужно в рамках обратного отчета\r\n    clearInterval(this.state.timer);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='timer'>\r\n        {this.state.counter} сек.\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  //setTime\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  actions\r\n)(TimerReverse);","import React, {Component} from 'react';\r\nimport {Numbers} from \"../Numbers\";\r\nimport TimerReverse from \"../../TimerReverse\";\r\nimport {lineLength} from '../../Count'\r\nimport {Button} from \"../../../Button\";\r\n\r\nexport class Rows extends Component {\r\n  state = {\r\n    [this.props.row]: [],\r\n  };\r\n\r\n  rowAnswer = (ans) => {\r\n    this.setState(state => ({...state, [this.props.row]: state[this.props.row].concat(ans)}))\r\n  };\r\n\r\n  submitRow = () => {\r\n    const {startNextRow, row} = this.props;\r\n    this.props.setAnswer(this.state[this.props.row]);\r\n    startNextRow(row + 1);\r\n  };\r\n\r\n  submitLastRow = () => {\r\n    this.submitRow();\r\n    this.props.endTraining();\r\n\r\n  };\r\n\r\n  render() {\r\n    const {row, currentRow, time, rowLength } = this.props;\r\n    return (\r\n      <div className='number-container'>\r\n        {\r\n          Array(lineLength).fill().map((number, j) => (\r\n            <Numbers\r\n              row={row}\r\n              key={j}\r\n              elIndex={j}\r\n              disabled={row !== currentRow}\r\n              lineLength={lineLength}\r\n              setAnswer={this.rowAnswer}\r\n            />\r\n          ))\r\n        }\r\n        {rowLength === row ? <Button onClick={this.submitLastRow} text='Готово' nameOfClass='next'/> :\r\n          <Button  nameOfClass='next' onClick={this.submitRow} text='Следующая строка' />}\r\n        <div className='timer-container'>\r\n          {row === currentRow &&\r\n          <TimerReverse maxTime={time} passedFunction={rowLength === row ? this.submitLastRow : this.submitRow}/>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../../actions/projectActions';\r\nimport {submitCount} from '../../../actions/generalHelpers';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Information from '../Shulte/Information';\r\nimport {Rows} from './Rows';\r\nimport {Button} from \"../../Button\";\r\nimport './styles.css';\r\n\r\nexport const lineLength = 23; //23;\r\nconst numberOfRows = 10; //10\r\n\r\nclass Count extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    result: {},\r\n    currentRow: 0,\r\n    answer: [],\r\n  };\r\n\r\n  setAnswer = (ans) => {\r\n    console.log(ans);\r\n    this.setState(({answer: {...this.state.answer, [this.state.currentRow]: ans}}))\r\n  };\r\n\r\n  rowLength = Array(numberOfRows).fill('');\r\n\r\n  startNextRow = (i) => {\r\n    this.setState({currentRow: i});\r\n  };\r\n\r\n  endTraining = () => {\r\n    this.setState({endTraining: true});\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult(this.state.answer);\r\n    this.props.history.push('/test/memory-words');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка различных аспектов внимания</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Складывайте или вычитайте числа'}</span>\r\n          <Button text='Начать' onClick={() =>\r\n            this.setState({startTraining: true})}/>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n          <Information\r\n            error={this.state.error}\r\n            end={this.state.endTraining}\r\n            errors={this.state.errorCounter}\r\n            errorMessage={'Неверное число!'}\r\n            instructionNote={'Найдите числа!'}\r\n          />\r\n\r\n          {\r\n            this.rowLength.map((item, i) =>\r\n              <Rows\r\n                rowLength={this.rowLength.length - 1}\r\n                key={i}\r\n                row={i}\r\n                currentRow={this.state.currentRow}\r\n                time={30}\r\n                setAnswer={this.setAnswer}\r\n                startNextRow={this.startNextRow}\r\n                endTraining={this.endTraining}\r\n              />\r\n            )\r\n          }\r\n\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining && <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitCount(result))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Count)\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../../actions/projectActions'\r\nimport {submitMemoryWords} from '../../../actions/generalHelpers'\r\nimport {Redirect} from 'react-router-dom'\r\nimport './styles.css';\r\nimport TimerReverse from \"../TimerReverse\";\r\nimport {Button} from \"../../Button\";\r\n\r\nconst words = ['Лес', 'Хлеб', 'Окно', 'Стул', 'Вода', 'Конь', 'Гриб', 'Игла', 'Мед', 'Огонь'].sort(() => Math.random() - 0.5);\r\n\r\nclass MemoryWords extends Component {\r\n  state = {\r\n    error: false,\r\n    errorCounter: 0,\r\n    startTraining: false,\r\n    endTraining: false,\r\n    showWords: true,\r\n    result: [],\r\n    correct: 0,\r\n  };\r\n\r\n  endMemorizing = () => {\r\n    this.setState({showWords: false})\r\n  };\r\n  checkWords = () => {\r\n    const wordsLower = words.map(word => word.toLowerCase());\r\n    const correct = Object.values(this.state.result).filter(value => wordsLower.includes(value.toLowerCase()));\r\n    this.setState({endTraining: true, correct: correct.length})\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState(({result: {...this.state.result, [e.target.id]: e.target.value}}))\r\n  };\r\n\r\n  setNext = () => {\r\n    this.props.submitResult(this.state.correct);\r\n    this.props.history.push('/test/current-summary');\r\n  };\r\n\r\n  render() {\r\n    const {auth} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return (\r\n      <div className='contents'>\r\n        <p>Тренировка памяти</p>\r\n        {!this.state.startTraining &&\r\n        <div className='message'>\r\n          <span className='start-message'>{'Запомните следующие слова'}</span>\r\n          <button className='start-btn' onClick={() =>\r\n            this.setState({startTraining: true})}>\r\n            Начать\r\n          </button>\r\n        </div>\r\n        }\r\n        {this.state.startTraining &&\r\n        <React.Fragment>\r\n\r\n          {this.state.showWords && <TimerReverse maxTime={30} passedFunction={this.endMemorizing}/>}\r\n\r\n          {this.state.showWords && <div className='words'>{words.join(', ')}</div>}\r\n          {!this.state.showWords && <div>\r\n            {words.map((word, i) => <div key={i} className='input-wrapper'><input placeholder={'Введите слово'}\r\n                                                                                  onChange={this.handleChange}\r\n                                                                                  autoComplete=\"off\"\r\n                                                                                  id={i}/></div>)}\r\n            <Button onClick={this.checkWords} text='Проверить' nameOfClass='next' />\r\n          </div>}\r\n\r\n        </React.Fragment>\r\n        }\r\n        {this.state.endTraining &&\r\n        //two buttons did better job, one button is next and the final button is submit\r\n        <>\r\n          <div>Воспроизведено слов правильно: {this.state.correct}</div>\r\n          <Button nameOfClass='next' onClick={this.setNext} text='Далее'/>\r\n        </>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    time: state.current.setTime,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n    submitResult: (result) => dispatch(submitMemoryWords(result))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MemoryWords)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../actions/authActions'\r\nimport './styles.css'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className=\"nav-right\">\r\n                <li><div onClick={props.signOut} className=\"logout\" >Выход</div></li>\r\n                <li><NavLink to='/profile' className=\"\">Профиль: {props.profile.firstName}</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks) // null replaced mapstatetoprops","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './styles.css'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <div>\r\n            <ul className=\"nav-right\">\r\n                <li><NavLink to='/signup'>Регистрация</NavLink></li>\r\n                <li><NavLink to='/signin'>Вход</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\nimport './styles.css'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\r\n    return (\r\n        <nav className=\"nav-wrapper\">\r\n            <div className=\"container inner-wrapper\">\r\n                <Link to='/'>Главная</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React, {Component} from 'react';\r\nimport {createProject} from \"../../actions/projectActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Button} from \"../Button\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass CurrentSummary extends Component {\r\n  state = {\r\n    showSummary: false,\r\n  };\r\n  showResults = () => {\r\n    this.props.createProject(this.props.project);\r\n    this.setState({showSummary: true});\r\n  };\r\n  render() {\r\n    const {auth, project} = this.props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>;\r\n    return <div>\r\n      <Button onClick={this.showResults} text='Посмотреть результаты'/>\r\n      {this.state.showSummary &&\r\n      <div>\r\n        Ваши результаты:\r\n\r\n      </div>\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    project: state.result\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentSummary)","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Signin from './components/auth/SignIn';\r\nimport Signup from './components/auth/SignUp';\r\nimport Test from './components/Test';\r\nimport Summary from './components/Summary';\r\nimport Train from './components/Train';\r\nimport Sample from './components/Sample';\r\nimport Shulte from './components/Sample/Shulte';\r\nimport ShulteRed from './components/Sample/ShulteRed';\r\nimport Perception from './components/Sample/Perception';\r\nimport Count from './components/Sample/Count';\r\nimport MemoryWords from './components/Sample/MemoryWords';\r\nimport Navbar from './components/Navbar';\r\nimport CurrentSummary from './components/CurrentSummary';\r\nimport './styles.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path='/psy-testing' component={Home} />\r\n          <Route exact path='/signin' component={Signin} />\r\n          <Route exact path='/signup' component={Signup} />\r\n          <Route exact path='/test' component={Test} />\r\n          <Route exact path='/train' component={Train} />\r\n          <Route exact path='/profile' component={Summary} />\r\n          <Route exact path='/summary' component={Summary} />\r\n          <Route exact path='/test/sample' component={Sample} />\r\n          <Route exact path='/test/shulte' component={Shulte} />\r\n          <Route exact path='/test/shulte-red' component={ShulteRed} />\r\n          <Route exact path='/test/perception' component={Perception} />\r\n          <Route exact path='/test/count' component={Count} />\r\n          <Route exact path='/test/memory-words' component={MemoryWords} />\r\n          <Route exact path='/test/current-summary' component={CurrentSummary} />\r\n          <Redirect to='/psy-testing' />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport fbConfig from './config/fbConfig';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n        reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}), // redux binding for firebase\r\n        reduxFirestore(fbConfig) // redux bindings for firestore\r\n     //   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App />\r\n            </BrowserRouter>\r\n        </Provider>,\r\n        document.getElementById('root'));\r\n});\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}