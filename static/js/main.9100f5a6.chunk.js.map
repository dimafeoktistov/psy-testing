{"version":3,"sources":["actions/actionCreatorsStartButton.js","actions/actionCreatorsShulte.js","reducers/index.js","reducers/shulteReducers.js","reducers/perceptionReducers.js","actions/actionCreatorsPerceptionOne.js","store/store.js","components/Instructions/index.js","components/Timer/index.js","components/Shulte/Table/index.js","components/Information/index.js","components/Shulte/index.js","containers/ShulteContainer.js","components/PerceptionOne/Grid/index.js","components/PerceptionOne/index.js","containers/PerceptionOneContainer.js","components/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["startTraining","training","dispatch","type","bool","checkTime","time","setTime","commonReducer","combineReducers","start","state","arguments","length","undefined","action","shulteError","shulteEnd","shulteErrors","error","perceptionErrors","perceptionError","perceptionEnd","configureStore","initialState","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Instructions","_ref","_ref$message","message","_ref$startTraining","react_default","a","createElement","className","onClick","Timer","timer","counter","tick","_this","setState","setInterval","this","props","getTime","clearInterval","Component","Table","tableLength","numbers","Array","fill","map","e","i","sort","Math","random","userNumbers","cellVerify","cell","slice","push","end","errorCounter","_this2","key","Information","_ref$error","_ref$end","_ref$time","_ref$errors","errors","_ref$errorMessage","errorMessage","_ref$instructionNote","instructionNote","Shulte","components_Instructions","Fragment","components_Information","Shulte_Table","getShulteError","checkShulteEnd","shulteErrorCounter","components_Timer","connect","status","shulteErrorCount","Grid","letters","letter","newLetters","searchedLetter","longLetters","concat","guessedCells","index","includes","target","innerText","PerceptionOne","errorCheck","perseptionError","PerceptionOne_Grid","perceptionErrorCounter","getPerceptionError","checkPerceptionEnd","perceptionErrorCount","Home","Link","to","App","Switch","Route","exact","path","component","ShulteContainer","PerceptionOneContainer","Redirect","Boolean","location","hostname","match","store","ReactDOM","render","es","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9100f5a6.chunk.js","sourcesContent":["export const START_TRAINING = 'START_TRAINING';\r\n\r\nexport const start = (bool) => {\r\n    return {\r\n        type: START_TRAINING,\r\n        bool\r\n    };\r\n}\r\nexport const startTraining = (training) => {\r\n    return (dispatch) => {\r\n        dispatch(start(training))\r\n    };\r\n}","export const CELL_CHECK = 'CELL_CHECK';\r\nexport const SHULTE_END = 'SHULTE_END';\r\nexport const TIME_CHECK = 'TIME_CHECK';\r\nexport const SHULTE_ERROR = 'SHULTE_ERROR';\r\n\r\nexport const shulteError = (bool) => {\r\n    return {\r\n        type: CELL_CHECK,\r\n        bool\r\n    };\r\n}\r\nexport const getShulteError = (bool) => {\r\n    return (dispatch) => {\r\n        dispatch(shulteError(bool))\r\n    };\r\n}\r\n\r\nexport const shulteEnd = (bool) => {\r\n    return {\r\n        type: SHULTE_END,\r\n        bool\r\n    };\r\n}\r\nexport const checkShulteEnd = (bool) => {\r\n    return (dispatch) => {\r\n        dispatch(shulteEnd(bool))\r\n    };\r\n}\r\n\r\nexport const setTime = (time) => {\r\n    return {\r\n        type: TIME_CHECK,\r\n        time\r\n    };\r\n}\r\nexport const checkTime = (time) => {\r\n    return (dispatch) => {\r\n        dispatch(setTime(time))\r\n    };\r\n}\r\n\r\nexport const shulteErrorCount = (error) => {\r\n    return {\r\n        type: SHULTE_ERROR,\r\n        error\r\n    };\r\n}\r\nexport const shulteErrorCounter = (error) => {\r\n    return (dispatch) => {\r\n        dispatch(shulteErrorCount(error))\r\n    };\r\n}","import { combineReducers } from 'redux'\r\nimport {\r\n    start,\r\n    shulteError,\r\n    shulteEnd,\r\n    checkTime,\r\n    shulteErrors,\r\n} from './shulteReducers'\r\nimport {\r\n    perceptionErrors,\r\n    perceptionError,\r\n    perceptionEnd,\r\n} from './perceptionReducers'\r\n\r\nexport const commonReducer = combineReducers({\r\n    start,\r\n    shulteError,\r\n    shulteEnd,\r\n    checkTime,\r\n    shulteErrors,\r\n    perceptionErrors,\r\n    perceptionError,\r\n    perceptionEnd,\r\n})","import { START_TRAINING } from '../actions/actionCreatorsStartButton';\r\nimport { CELL_CHECK, SHULTE_END, TIME_CHECK, SHULTE_ERROR } from '../actions/actionCreatorsShulte';\r\n\r\nexport const start = (state = false, action) => {\r\n    switch (action.type) {\r\n        case START_TRAINING:\r\n            return action.bool;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const shulteError = (state = false, action) => {\r\n    switch (action.type) {\r\n        case CELL_CHECK:\r\n            return action.bool;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const shulteEnd = (state = false, action) => {\r\n    switch (action.type) {\r\n        case SHULTE_END:\r\n            return action.bool;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const checkTime = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case TIME_CHECK:\r\n            return action.time;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const shulteErrors = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case SHULTE_ERROR:\r\n            return state + action.error;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { PERCEPTION_ERROR, PERCEPTION_CELL_CHECK, PERCEPTION_END } from '../actions/actionCreatorsPerceptionOne';\r\n\r\nexport const perceptionErrors = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case PERCEPTION_ERROR:\r\n            return state + action.error;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const perceptionError = (state = false, action) => {\r\n    switch (action.type) {\r\n        case PERCEPTION_CELL_CHECK:\r\n            return action.bool;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const perceptionEnd = (state = false, action) => {\r\n    switch (action.type) {\r\n        case PERCEPTION_END:\r\n            return action.bool;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const PERCEPTION_ERROR = 'PERCEPTION_ERROR';\r\nexport const PERCEPTION_CELL_CHECK = 'PERCEPTION_CELL_CHECK';\r\nexport const PERCEPTION_END = 'PERCEPTION_END';\r\n\r\nexport const perceptionErrorCount = (error) => {\r\n    return {\r\n        type: PERCEPTION_ERROR,\r\n        error\r\n    };\r\n}\r\nexport const perceptionErrorCounter = (error) => {\r\n    return (dispatch) => {\r\n        dispatch(perceptionErrorCount(error))\r\n    };\r\n}\r\n\r\nexport const perceptionError = (bool) => {\r\n    return {\r\n        type: PERCEPTION_CELL_CHECK,\r\n        bool\r\n    };\r\n}\r\nexport const getPerceptionError = (bool) => {\r\n    return (dispatch) => {\r\n        dispatch(perceptionError(bool))\r\n    };\r\n}\r\n\r\nexport const perceptionEnd = (bool) => {\r\n    return {\r\n        type: PERCEPTION_END,\r\n        bool\r\n    };\r\n}\r\nexport const checkPerceptionEnd = (bool) => {\r\n    return (dispatch) => {\r\n        dispatch(perceptionEnd(bool))\r\n    };\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { commonReducer } from '../reducers/index';\r\n\r\nconst configureStore = (initialState) => {\r\n    return createStore(\r\n        commonReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(thunk),\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\n    );\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\r\n\r\nconst Instructions = ({ message = '', startTraining = () => { } }) => {\r\n    return (\r\n        <div className='message'>\r\n            <span className='start-message'>{message}</span>\r\n            <button className='start-btn' onClick={() => startTraining(true)}>Начать</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instructions;","import React, { Component } from 'react';\r\n\r\nclass Timer extends Component {\r\n    state = {\r\n        timer: null,\r\n        counter: 0\r\n    };\r\n   \r\n    tick = () => {\r\n        this.setState({\r\n            counter: this.state.counter + 1\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let timer = setInterval(this.tick, 1000);\r\n        this.setState({ timer });\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.getTime(this.state.counter);\r\n        clearInterval(this.state.timer);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='timer'>\r\n                {this.state.counter} сек.\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Timer;","import React, { Component } from 'react';\r\nimport './styles.css'\r\n\r\nclass Table extends Component {\r\n    tableLength = 25;\r\n    numbers = Array(this.tableLength).fill().map((e, i) => i + 1).sort(() => Math.random() - 0.5)\r\n    userNumbers = [0];\r\n    cellVerify = (cell) => {\r\n        this.props.error(false);\r\n        if (this.userNumbers.slice(-1)[0] + 1 === cell) {\r\n            this.userNumbers.push(cell);\r\n            if (this.userNumbers.slice(-1)[0] === this.tableLength) {\r\n                this.props.end(true);\r\n            }\r\n        }\r\n        else {\r\n            this.props.error(true);\r\n            if (this.userNumbers.length <= this.tableLength && cell !== 25 ) {\r\n                this.props.errorCounter(1);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='table' >\r\n                {\r\n                    this.numbers.map((e) =>\r\n                        <div key={e} onClick={() => this.cellVerify(e)} className='cell'>{e}</div>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Information = ({ error = false, end = false, time = 0, errors = 0, errorMessage='Ошибка', instructionNote='' }) => {\r\n    return (\r\n        <div className='info'>\r\n            {\r\n                end ? <p>Тестирование завершено! Ваше время: {time} сек. Вы сделали {errors} ошибок.</p> :\r\n                    error ? <p className='info__error'>{errorMessage}</p> :\r\n                        <p>{instructionNote}</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Information;","import React, { Component } from 'react';\r\nimport Instructions from '../Instructions';\r\nimport Timer from '../Timer';\r\nimport Table from './Table';\r\nimport Information from '../Information';\r\nimport './styles.css';\r\n\r\nclass Shulte extends Component {\r\n    componentWillUnmount() {\r\n        this.props.startTraining(false)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='contents'>\r\n                <p>Тренировка различных аспектов внимания</p>\r\n                <Instructions message={'Начните поиск цифр от 1 до 25'} startTraining={this.props.startTraining} />\r\n                {this.props.start &&\r\n                    <React.Fragment>\r\n                        <Information\r\n                            error={this.props.shulteError}\r\n                            end={this.props.shulteEnd}\r\n                            time={this.props.time}\r\n                            errors={this.props.error} \r\n                            errorMessage={'Неверное число!'}\r\n                            instructionNote={'Найдите числа!'}\r\n                            />\r\n                        <Table error={this.props.getShulteError} end={this.props.checkShulteEnd} errorCounter={this.props.shulteErrorCounter} />\r\n                        {!this.props.shulteEnd && <Timer getTime={this.props.checkTime} />}\r\n                    </React.Fragment>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Shulte;","import { connect } from 'react-redux';\r\nimport Shulte from '../components/Shulte';\r\nimport { startTraining } from '../actions/actionCreatorsStartButton';\r\nimport { getShulteError, checkShulteEnd, checkTime, shulteErrorCounter } from '../actions/actionCreatorsShulte';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        start: state.start,\r\n        shulteError: state.shulteError,\r\n        shulteEnd: state.shulteEnd,\r\n        time: state.checkTime,\r\n        error: state.shulteErrors,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        startTraining: (status) => dispatch(startTraining(status)),\r\n        getShulteError: (bool) => dispatch(getShulteError(bool)),\r\n        checkShulteEnd: (bool) => dispatch(checkShulteEnd(bool)),\r\n        checkTime: (time) => dispatch(checkTime(time)),\r\n        shulteErrorCounter: (error) => dispatch(shulteErrorCounter(error)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shulte);\r\n\r\n","import React, { Component } from 'react';\r\nimport './styles.css'\r\n\r\nclass Grid extends Component {\r\n\r\n    letters = Array(252).fill(this.props.letter);\r\n    // letters = Array(4).fill(this.props.letter);   // short array for testing\r\n    newLetters = Array(4).fill(this.props.searchedLetter);\r\n    longLetters = this.letters.concat(this.newLetters).sort(() => Math.random() - 0.5);\r\n\r\n    guessedCells = [];\r\n    cellVerify = (cell, index) => {\r\n        this.props.error(false);\r\n        if (cell === this.props.searchedLetter && !this.guessedCells.includes(index) && this.guessedCells.length <= this.newLetters.length) {\r\n            this.guessedCells.push(index)\r\n            if (this.newLetters.length === this.guessedCells.length) {\r\n                this.props.end(true)\r\n            }\r\n        } else {\r\n            this.props.error(true);\r\n            this.props.errorCounter(1);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='grid' >\r\n                {\r\n                    this.longLetters.map((e, i) =>\r\n                        <div\r\n                            key={i}\r\n                            onClick={(e) => this.cellVerify(e.target.innerText, i)}\r\n                            className='letter'>{e}\r\n                        </div>)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Grid;","import React, { Component } from 'react';\r\nimport Instructions from '../Instructions';\r\nimport Timer from '../Timer';\r\nimport Information from '../Information';\r\nimport Grid from './Grid'\r\n\r\nclass PerceptionOne extends Component {\r\n    letter = 'н';\r\n    searchedLetter = 'и';\r\n    render() {\r\n        return (\r\n            <div className='contents'>\r\n                <p>Корректурная проба</p>\r\n                <Instructions message={`Найдите все буквы \"${this.searchedLetter}\"`} startTraining={this.props.startTraining} />\r\n                {this.props.start &&\r\n                    <React.Fragment>\r\n                        <Information error={this.props.errorCheck} end={this.props.perceptionEnd} time={this.props.time} \r\n                        errors={this.props.perseptionError} \r\n                        errorMessage={'Неверная буква!'}\r\n                        instructionNote={`Найдите все буквы \"${this.searchedLetter}\"`}\r\n                        />\r\n                        <Grid\r\n                            letter={this.letter}\r\n                            searchedLetter={this.searchedLetter}\r\n                            errorCounter={this.props.perceptionErrorCounter}\r\n                            error={this.props.getPerceptionError}\r\n                            end={this.props.checkPerceptionEnd}\r\n                        />\r\n                        {!this.props.perceptionEnd && <Timer getTime={this.props.checkTime} />}\r\n                    </React.Fragment>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PerceptionOne;","import { connect } from 'react-redux';\r\nimport PerceptionOne from '../components/PerceptionOne';\r\nimport { startTraining } from '../actions/actionCreatorsStartButton';\r\nimport { perceptionErrorCounter, checkPerceptionEnd, getPerceptionError } from '../actions/actionCreatorsPerceptionOne';\r\nimport { checkTime } from '../actions/actionCreatorsShulte';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        start: state.start,\r\n        perseptionError: state.perceptionErrors,\r\n        errorCheck: state.perceptionError,\r\n        perceptionEnd: state.perceptionEnd,\r\n        time: state.checkTime,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        startTraining: (status) => dispatch(startTraining(status)),\r\n        perceptionErrorCounter: (error) => dispatch(perceptionErrorCounter(error)),\r\n        checkPerceptionEnd: (bool) => dispatch(checkPerceptionEnd(bool)),\r\n        checkTime: (time) => dispatch(checkTime(time)),\r\n        getPerceptionError: (bool) => dispatch(getPerceptionError(bool)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PerceptionOne);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <p>\r\n            Психологические тесты:\r\n          </p>\r\n          <Link to=\"/shulte\" className=\"\">Таблица Шульте</Link>\r\n          <Link to=\"/perception1\">Корректурная проба 1</Link>\r\n        </header>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport ShulteContainer from './containers/ShulteContainer';\r\nimport PerceptionOneContainer from './containers/PerceptionOneContainer';\r\nimport Home from './components/Home';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"page\">\r\n\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path='/shulte' component={ShulteContainer} />\r\n          <Route exact path='/perception1' component={PerceptionOneContainer} />\r\n\r\n          <Redirect to='/' />\r\n        </Switch>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './store/store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}